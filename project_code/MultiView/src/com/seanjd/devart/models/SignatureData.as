package com.seanjd.devart.models
{
	import away3d.core.base.Geometry;
	import away3d.materials.ColorMaterial;
	import away3d.materials.MaterialBase;
	import away3d.primitives.SphereGeometry;
	import flash.utils.ByteArray;
	
	/**
	 * ...
	 * @author SJD
	 */
	
	public class SignatureData{
		
		//hardcoded for now, these values will be generated by user data such as heart rate
		private const NUM_PARTICLES:int = 3;
		
		private var _id:uint;//user is anonymous, simply for internal id
		private var _eyeCol:uint;//average hex value
		private var _bpm:Number;//average heart rate 
		private var _heartData:ByteArray;//stores entire graph as BA
		private var _message:ByteArray;//stores audio msg as BA
		
		private var _positions:Vector.<Point3D> = new Vector.<Point3D>;
		private var _geoms:Vector.<Geometry> = new Vector.<Geometry>;
		private var _mats:Vector.<MaterialBase> = new Vector.<MaterialBase>;
		
		public function SignatureData() {
			
			_positions.push(new Point3D());//particle 1 at 0,0,0
			_positions.push(new Point3D(3,3));
			_positions.push(new Point3D(0,0,-4));
			_positions.push(new Point3D(-3,1,1));
			_positions.push(new Point3D(-1,6,-1));
			_positions.push(new Point3D(1, 4, 0));
			
			var sizes:Array = [2.5, 1.8, 1.8, 1.6, 1.4, 1.3];
			
			for (var i:uint = 0; i < NUM_PARTICLES; i++) {
				_geoms.push(new SphereGeometry(sizes[i], 4, 4));
			}
			
		}
		
		public function get positions():Vector.<Point3D> {
			return _positions;
		}
		public function get geoms():Vector.<Geometry> {
			return _geoms;
		}
	
	}

}